#!/usr/bin/env node

const http = require('http');
const debug = require('debug')('expressjs-template:server');
const config = require('config');
const app = require('../app');
const logger = require('../src/logger');


// Set port.
app.set('port', config.port);


// Create http server.
const server = http.createServer(app);


// Listen to port.
function onError(error) {
  if (error.syscall !== 'listen') throw error;
  const bind = `Port ${config.port}`;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      logger.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      logger.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const address = server.address();
  logger.info(`Server started on port: ${address.port}`);
  debug(`Listening on port: ${address.port}`);
}

server.listen(config.port);
server.on('error', onError);
server.on('listening', onListening);
